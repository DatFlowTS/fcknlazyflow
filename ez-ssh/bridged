#!/bin/bash

# This script is for using to connect to a remote host 
# which is not directly accessible via SSH
# because it's not using the default port while other
# ports are blocked locally or it's just not accessible from
# outside its private network.
# 
# You'll still need another host accessible via SSH default port
# in the remote network
#
# Edit the following variables to match your purposes:
HOST="remote.domain.tld" # also using an IP address would be fine
BRIDGEHST="bridge.domain.tld" # same thing as above
CMD="bridged" # edit to the filename
DEFUSER="user" # insert your default username on the remote host
VNCPORT=5901 # edit to match the remote hosts VNC port for your user
TUNPORT=5901 # edit to your preferred localhost port which is free
BRIDGEPORT=9999 # same thing as above - used for SSH to the remote host
SSHPORT=22 # in case it's not the default port where the SSH server is listening
#
# ---------------------------------
# ---------------------------------
#
# DO NOT EDIT FROM HERE ANYMORE!
#
# ---------------------------------
# ---------------------------------
#
PATTERN='^[-][[:lower:]_]([[:lower:]0-9_-]{0,31}|[[:lower:]0-9_-]{0,30}\$)$'

if [[ "$1" = "help" ]] || [[ "$1" = "h" ]]; then
	if [[ "$2" = "X11" ]]; then
		echo "Usage: '$CMD X11 [-username] <command>'"
	elif [[ "$2" = "ssh" ]]; then
		echo "Usage: '$CMD [-username] [command]'"
	elif [[ "$2" = "vnc" ]]; then
		echo "Usage: '$CMD vnc'"
	elif [[ "$2" = "cp" ]]; then
		echo "Usage: '$CMD cp [-username] <local file/dir> /<remote dir>"
		echo "Or: '$CMD cp [-username] -r /<remote file/dir> <local dir>'"
		echo "Always use relative path for remote file or directory"
	else
		echo "---- #### ---- '$CMD' HELP ---- #### ----"
		echo ""
		echo "This script is for using to connect to a remote host"
		echo "which is not directly accessible via SSH"
		echo "because it's not using the default port while other"
		echo "ports are blocked locally or it's just not accessible from"
		echo "outside its private network."
		echo ""
		echo "You'll still need another host accessible via SSH default port"
		echo "in the remote network."
		echo ""
		echo " ---- #### ----- 	    EXAMPLES      ----- #### ----"
		echo " - '$CMD vnc' => VNC to $HOST via SSH Tunnel"
		echo "    between Ports $TUNPORT and $VNCPORT via"
		echo "    $BRIDGEHST on $BRIDGEPORT"
		echo " - '$CMD X11 -foo firefox' => X11-Forward Firefox"
		echo " - '$CMD -bar' => SSH to $HOST as bar'"
		echo " - '$CMD foobar => runs 'foobar' as $DEFUSER"
		echo " - '$CMD cp -foo bar /foobar =>" 
		echo "    copies recursively from bar to /foobar"
		echo " - '$CMD' => SSH to $HOST as $DEFUSER"
		echo "--------------------------------------------------------"
	fi
elif [[ "$1" = "vnc" ]]; then
	ssh -p ${SSHPORT} -L ${BRIDGEPORT}:${HOST}:22 -N -f ${DEFUSER}@${BRIDGEHST}
	ssh -L ${TUNPORT}:localhost:${VNCPORT} -N -f -p ${BRIDGEPORT} ${DEFUSER}@localhost
	if [[ "$(uname)" = "Darwin" ]]; then
		open vnc://localhost:${TUNPORT} &
	else 
		vncviewer localhost:${TUNPORT} &
	fi
elif [[ "$1" = "X11" ]]; then
	if [[ "$2" =~ $PATTERN ]];then
		ssh -p ${SSHPORT} -J ${2:1}@${BRIDGEHST} -X ${2:1}@${HOST} "$3"
	else
		ssh -p ${SSHPORT} -J ${DEFUSER}@${BRIDGEHST} -X ${DEFUSER}@${HOST} "$2"
	fi
elif [[ "$1" =~ $PATTERN ]];then
	ssh -p ${SSHPORT} -J ${1:1}@$BRIDGEHST ${1:1}@${HOST} "$2"
elif [[ "$1" = "cp" ]]; then
	if [[ "$2" =~ $PATTERN ]];then
		ssh -p ${SSHPORT} -L ${BRIDGEPORT}:${HOST}:22 -N -f ${2:1}@${BRIDGEHST}
		if [[ "$3" = "-r" ]]; then
			scp -p ${SSHPORT} -r ${2:1}@${HOST}:${4} $5
		else
			scp -p ${SSHPORT} -r $3 ${2:1}@${HOST}:${4}
		fi
	else 
		ssh -p ${SSHPORT} -L ${BRIDGEPORT}:${HOST}:22 -N -f ${DEFUSER}@${BRIDGEHST}
		if [[ "$2" = "-r" ]]; then
			scp -p ${SSHPORT} -r ${DEFUSER}}@${HOST}:${3} $4
		else
			scp -p ${SSHPORT} -r $2 ${DEFUSER}@${HOST}:${3}
		fi
	fi
else
	ssh -p ${SSHPORT} -J ${DEFUSER}@${BRIDGEHST} ${DEFUSER}@${HOST} "$1"
fi
