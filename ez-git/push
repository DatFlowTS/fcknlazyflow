#!/bin/bash
#
# This script loops through all cloned REPOS
# in your GITROOT and pushes the repo defined
# as argument. 
#
# Intentionally it's meant to be used as a cronjob.
#
# Edit the following variable to match your purposes:
GITROOT=$HOME/dev
#
# ---------------------------------
# ---------------------------------
#
# DO NOT EDIT FROM HERE ANYMORE!
#
# ---------------------------------
# ---------------------------------
#
REPOS=$(ls $GITROOT | grep -v "LOGS")
LOG=$GITROOT/LOGS/push

if [[ ! -d "${LOG}" ]]; then
	mkdir -p ${LOG}
fi


if [ $# -eq 0 ] | [ -z "$1" ]; then
	echo "No argument supplied!"
	exit 1
elif [ $# -eq 1 ] | [ ! -z "$1" ]; then
	if [[ "$1" = "any" ]]; then
		for d in ${REPOS}; do
			echo "" | tee -a ${LOG}/${d}.log
			echo '------------########################------------' >> ${LOG}/${d}.log
			echo '------------########################------------' >> ${LOG}/${d}.log
			echo "$(date)" >> ${LOG}/${d}.log
			echo "" >> ${LOG}/${d}.log
			echo "-----"
			echo "pushing repo: ${GITROOT}/$d" | tee -a ${LOG}/${d}.log
			cd $GITROOT/$d/
			git push >> ${LOG}/${d}.log 2>&1
			cd
			echo "DONE!" | tee -a ${LOG}/${d}.log
			echo "-----"
			echo "" | tee -a ${LOG}/${d}.log
		done
	else 	
		for d in ${REPOS}; do
			if [[ "$1" = "$d" ]]; then
				echo "" | tee -a ${LOG}/${d}.log
				echo '------------########################------------' >> ${LOG}/${d}.log
				echo '------------########################------------' >> ${LOG}/${d}.log
				echo "$(date)" >> ${LOG}/${d}.log
				echo "" >> ${LOG}/${d}.log
				echo "-----"
				echo "pushing repo: ${GITROOT}/$d" | tee -a ${LOG}/${d}.log
				cd $GITROOT/$d/
				git push >> ${LOG}/${d}.log 2>&1
				cd
				echo "DONE!" | tee -a ${LOG}/${d}.log
				echo "-----"
				echo "" | tee -a ${LOG}/${d}.log
			else 
				echo "-----"			
				echo "skipping repo: ${GITROOT}/$d"
				echo "-----"
				echo ""
			fi
		done
	fi
	exit 0
else
	echo "Too many arguments!"
	exit 1
fi
